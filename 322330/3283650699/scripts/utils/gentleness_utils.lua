----
---文件处理时间:2024-07-01 23:34:18
---
local OOOoOOOOoooooOoOOOoo = require(string.char(0x77)..string.char(0x69)..string.char(0x64)..string.char(0x67)..string.char(0x65)..string.char(0x74)..string.char(0x73).."/"..string.char(0x77)..string.char(0x69)..string.char(0x64)..string.char(0x67)..string.char(0x65)..string.char(0x74)) local oOooooOOooOoOOOOoOOO = require(string.char(0x77)..string.char(0x69)..string.char(0x64)..string.char(0x67)..string.char(0x65)..string.char(0x74)..string.char(0x73).."/"..string.char(0x69)..string.char(0x6d)..string.char(0x61)..string.char(0x67)..string.char(0x65)) local OoOOOOOOOOoOOOooOOOo = require(string.char(0x77)..string.char(0x69)..string.char(0x64)..string.char(0x67)..string.char(0x65)..string.char(0x74)..string.char(0x73).."/"..string.char(0x74)..string.char(0x65)..string.char(0x78)..string.char(0x74)) local ooOoOOoooOOoOOOOOooO = require(string.char(0x77)..string.char(0x69)..string.char(0x64)..string.char(0x67)..string.char(0x65)..string.char(0x74)..string.char(0x73).."/"..string.char(0x69)..string.char(0x6d)..string.char(0x61)..string.char(0x67)..string.char(0x65)..string.char(0x62)..string.char(0x75)..string.char(0x74)..string.char(0x74)..string.char(0x6f)..string.char(0x6e)) local oOooOOOooOoOOOooOOOo = require(string.char(0x77)..string.char(0x69)..string.char(0x64)..string.char(0x67)..string.char(0x65)..string.char(0x74)..string.char(0x73).."/"..string.char(0x74)..string.char(0x72)..string.char(0x75)..string.char(0x65)..string.char(0x73)..string.char(0x63)..string.char(0x72)..string.char(0x6f)..string.char(0x6c)..string.char(0x6c)..string.char(0x61)..string.char(0x72)..string.char(0x65)..string.char(0x61)) local ooOoOOOoOoooooOoooOo = require(string.char(0x77)..string.char(0x69)..string.char(0x64)..string.char(0x67)..string.char(0x65)..string.char(0x74)..string.char(0x73).."/"..string.char(0x75)..string.char(0x69)..string.char(0x61)..string.char(0x6e)..string.char(0x69)..string.char(0x6d)) local oooOoooooooOooooooOO = {} function oooOoooooooOooooooOO:HHPrint(data) print("=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."煎".."蛋".."工".."具".."类".."打".."印".."对".."象".."开".."始".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=") print("时".."间"..":", os.date(), " ".."打".."印".."类".."型"..":", type(data), " ".."打".."印".."对".."象"..":", data) if type(data) == 'table' then print(data, "\n{") for i, v in pairs(data) do print("\t[" .. tostring(i) .. "] ==>", v) end print("}") else print("打".."印".."=".."="..">", data) end print("时".."间"..":", os.date(), " ".."打".."印".."结".."束") print("=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."煎".."蛋".."工".."具".."类".."打".."印".."对".."象".."开".."始".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=".."=") end function oooOoooooooOooooooOO:HHCopyTable(orig, copies) copies = copies or {} local OoOoooOOooooOoOooooO = type(orig) local OoOOooOooooOoooOoooo if OoOoooOOooooOoOooooO == string.char(0x74,0x61,0x62,0x6c,0x65) then if copies[orig] then OoOOooOooooOoooOoooo = copies[orig] else OoOOooOooooOoooOoooo = {} copies[orig] = OoOOooOooooOoooOoooo for orig_key, orig_value in next, orig, nil do OoOOooOooooOoooOoooo[oooOoooooooOooooooOO:HHCopyTable(orig_key, copies)] = oooOoooooooOooooooOO:HHCopyTable(orig_value, copies) end setmetatable(OoOOooOooooOoooOoooo, oooOoooooooOooooooOO:HHCopyTable(getmetatable(orig), copies)) end else OoOOooOooooOoooOoooo = orig end return OoOOooOooooOoooOoooo end function oooOoooooooOooooooOO:HHSay(inst, str) if inst and inst[string.char(0x63,0x6f,0x6d,0x70,0x6f,0x6e,0x65,0x6e,0x74,0x73)] and inst[string.char(0x63,0x6f,0x6d,0x70,0x6f,0x6e,0x65,0x6e,0x74,0x73)][string.char(0x74,0x61,0x6c,0x6b,0x65,0x72)] then inst[string.char(0x63,0x6f,0x6d,0x70,0x6f,0x6e,0x65,0x6e,0x74,0x73)][string.char(0x74,0x61,0x6c,0x6b,0x65,0x72)]:Say(tostring(str)) end end function oooOoooooooOooooooOO:HasComponents(inst, str) if inst and inst[string.char(0x63,0x6f,0x6d,0x70,0x6f,0x6e,0x65,0x6e,0x74,0x73)] and inst[string.char(0x63,0x6f,0x6d,0x70,0x6f,0x6e,0x65,0x6e,0x74,0x73)][str] then return true else return false end end function oooOoooooooOooooooOO:HasReplica(inst, str) if inst and inst[string.char(0x72,0x65,0x70,0x6c,0x69,0x63,0x61)] and inst[string.char(0x72,0x65,0x70,0x6c,0x69,0x63,0x61)][str] then return true else return false end end function oooOoooooooOooooooOO:HHCreateImageUi(father, xml, tex, pos, size_x, size_y, color) local oooOoOoOOOooOoooOOoO = father:AddChild(oOooooOOooOoOOOOoOOO(xml, tex)) oooOoOoOOOooOoooOOoO:SetPosition(pos) if size_x and size_y then oooOoOoOOOooOoooOOoO:SetSize(size_x, size_y) end if color and type(color) == 'table' and #color == 0x4 then oooOoOoOOOooOoooOOoO:SetTint(color[0x1], color[0x2], color[0x3], color[0x4]) end return oooOoOoOOOooOoooOOoO end function oooOoooooooOooooooOO:HHCreateImageButton(father, xml, tex, pos, scale_x, scale_y, color) local oooOoOoOOOooOoooOOoO = father:AddChild(ooOoOOoooOOoOOOOOooO(xml, tex)) oooOoOoOOOooOoooOOoO:SetPosition(pos) oooOoOoOOOooOoooOOoO[string.char(0x69,0x6d,0x61,0x67,0x65)]:SetScale(scale_x, scale_y, 0x1) if color then oooOoOoOOOooOoooOOoO[string.char(0x69,0x6d,0x61,0x67,0x65)]:SetTint(color[0x1], color[0x2], color[0x3], color[0x4]) end oooOoOoOOOooOoooOOoO[string.char(0x4f,0x6e,0x47,0x61,0x69,0x6e,0x46,0x6f,0x63,0x75,0x73)] = function() oooOoOoOOOooOoooOOoO[string.char(0x69,0x6d,0x61,0x67,0x65)]:SetScale(scale_x * 1.1, scale_y * 1.1, 0x1) end oooOoOoOOOooOoooOOoO[string.char(0x4f,0x6e,0x4c,0x6f,0x73,0x65,0x46,0x6f,0x63,0x75,0x73)] = function() oooOoOoOOOooOoooOOoO[string.char(0x69,0x6d,0x61,0x67,0x65)]:SetScale(scale_x, scale_y, 0x1) end return oooOoOoOOOooOoooOOoO end function oooOoooooooOooooooOO:HHCreateTextUi(father, pos, str, color, scale, is_left) local ooOOooOooOOoOOoOOOoo = father:AddChild(OoOOOOOOOOoOOOooOOOo(NUMBERFONT, scale or 0x1e, "")) ooOOooOooOOoOOoOOOoo:SetPosition(pos) ooOOooOooOOoOOoOOOoo:SetString(str) ooOOooOooOOoOOoOOOoo:SetColour(color or { 0x1, 0x1, 0x1, 0x1 }) if is_left then ooOOooOooOOoOOoOOOoo:SetHAlign(ANCHOR_LEFT) ooOOooOooOOoOOoOOOoo:SetVAlign(ANCHOR_MIDDLE) end return ooOOooOooOOoOOoOOOoo end function oooOoooooooOooooooOO:HHKillChild(self, key) if self and self[key] then self[key]:Kill() self[key] = nil end end function oooOoooooooOooooooOO:HHKillTask(self, key) if self and self[key] then self[key]:Cancel() self[key] = nil end end function oooOoooooooOooooooOO:HHRemoveFx(self, key) if self and self[key] and self[key][string.char(0x52,0x65,0x6d,0x6f,0x76,0x65)] then self[key]:Remove() self[key] = nil end end function oooOoooooooOooooooOO:TableToStr(hh_table) local OoOoOoooOoOOoOooooOo = "{}" local success, oooooOoOOOooOooooooo = pcall(json[string.char(0x65,0x6e,0x63,0x6f,0x64,0x65)], hh_table) if success then OoOoOoooOoOOoOooooOo = oooooOoOOOooOooooooo end return OoOoOoooOoOOoOooooOo end function oooOoooooooOooooooOO:StrToTable(hh_str) local OoOoOoooOoOOoOooooOo = {} local success, oooooOoOOOooOooooooo = pcall(json[string.char(0x64,0x65,0x63,0x6f,0x64,0x65)], hh_str) if success then OoOoOoooOoOOoOooooOo = oooooOoOOOooOooooooo end return OoOoOoooOoOOoOooooOo end function oooOoooooooOooooooOO:TableSortKeys(hh_table) local oooooOoOOOooOooooooo = {} if type(hh_table) == 'table' then for i, v in pairs(hh_table) do if type(i) == 'string' then table[string.char(0x69,0x6e,0x73,0x65,0x72,0x74)](oooooOoOOOooOooooooo, i) end end end table[string.char(0x73,0x6f,0x72,0x74)](oooooOoOOOooOooooooo) return oooooOoOOOooOooooooo end function oooOoooooooOooooooOO:HHCompareTable(table1, table2) if table1 == table2 then return true end if table1 == nil or table2 == nil or type(table1) ~= string.char(0x74,0x61,0x62,0x6c,0x65) or type(table2) ~= string.char(0x74,0x61,0x62,0x6c,0x65) then return false end if #table1 ~= #table2 then return false end for key, value in pairs(table1) do if not oooOoooooooOooooooOO:HHCompareTable(value, table2[key]) then return false end end for key, value in pairs(table2) do if not oooOoooooooOooooooOO:HHCompareTable(value, table1[key]) then return false end end return true end function oooOoooooooOooooooOO:IsHHType(data, hh_type) if data and type(data) == hh_type then return true end return false end function oooOoooooooOooooooOO:GetAngleValue(math_type, angle) if math[math_type] then return math[math_type](math[string.char(0x72,0x61,0x64)](angle)) end return 0x1 end function oooOoooooooOooooooOO:GetDistance(x1, y1, x2, y2) return math[string.char(0x73,0x71,0x72,0x74)]((x2 - x1) ^ 0x2 + (y2 - y1) ^ 0x2) end function oooOoooooooOooooooOO:GetAngleByPoints(x1, y1, x2, y2) local oOoOoOoOoOOoooOoOooO = x2 - x1 local oOoOOOoooooooooOOOOO = y2 - y1 local angle = math[string.char(0x61,0x74,0x61,0x6e,0x32)](oOoOOOoooooooooOOOOO, oOoOoOoOoOOoooOoOooO) * 0xb4 / math[string.char(0x70,0x69)] return angle end function oooOoooooooOooooooOO:NotIsDead(inst) if inst:IsValid() and oooOoooooooOooooooOO:HasComponents(inst, string.char(0x68,0x65,0x61,0x6c,0x74,0x68)) and not inst[string.char(0x63,0x6f,0x6d,0x70,0x6f,0x6e,0x65,0x6e,0x74,0x73)][string.char(0x68,0x65,0x61,0x6c,0x74,0x68)]:IsDead() then return true end return false end function oooOoooooooOooooooOO:CanHitTarget(attacker, target) if not (oooOoooooooOooooooOO:IsHHType(attacker, string.char(0x74,0x61,0x62,0x6c,0x65)) and oooOoooooooOooooooOO:IsHHType(target, string.char(0x74,0x61,0x62,0x6c,0x65)) and attacker[string.char(0x49,0x73,0x56,0x61,0x6c,0x69,0x64)] and attacker:IsValid() and target[string.char(0x49,0x73,0x56,0x61,0x6c,0x69,0x64)] and target:IsValid() and attacker[string.char(0x54,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d)] and not attacker:HasTag(string.char(0x46,0x58)) and not attacker:HasTag(string.char(0x49,0x4e,0x4c,0x49,0x4d,0x42,0x4f)) and not attacker:HasTag(string.char(0x44,0x45,0x43,0x4f,0x52)) and target[string.char(0x54,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d)] and not target:HasTag(string.char(0x46,0x58)) and not target:HasTag(string.char(0x49,0x4e,0x4c,0x49,0x4d,0x42,0x4f)) and not target:HasTag(string.char(0x44,0x45,0x43,0x4f,0x52))) then return false end if attacker == target then return false end local OOOoooooOOOOOOOOOOoO = attacker[string.char(0x63,0x6f,0x6d,0x70,0x6f,0x6e,0x65,0x6e,0x74,0x73)][string.char(0x66,0x6f,0x6c,0x6c,0x6f,0x77,0x65,0x72)] local oooOOooooOoOOooOOoOo = target[string.char(0x63,0x6f,0x6d,0x70,0x6f,0x6e,0x65,0x6e,0x74,0x73)][string.char(0x66,0x6f,0x6c,0x6c,0x6f,0x77,0x65,0x72)] if OOOoooooOOOOOOOOOOoO and OOOoooooOOOOOOOOOOoO[string.char(0x6c,0x65,0x61,0x64,0x65,0x72)] == target then return false end if oooOOooooOoOOooOOoOo and oooOOooooOoOOooOOoOo[string.char(0x6c,0x65,0x61,0x64,0x65,0x72)] == attacker then return false end return true end function oooOoooooooOooooooOO:GetSortTableKeys(originalTable) local OOoOoOoOOOOOOoooooOo = {} for key, _ in pairs(originalTable) do table[string.char(0x69,0x6e,0x73,0x65,0x72,0x74)](OOoOoOoOOOOOOoooooOo, key) end table[string.char(0x73,0x6f,0x72,0x74)](OOoOoOoOOOOOOoooooOo, function(a, b) return originalTable[a][string.char(0x69,0x64)] < originalTable[b][string.char(0x69,0x64)] end) local oooOooOoOOOoOooOOOOO = {} for _, key in ipairs(OOoOoOoOOOOOOoooooOo) do oooOooOoOOOoOooOOOOO[#oooOooOoOOOoOooOOOOO + 0x1] = key end return oooOooOoOOOoOooOOOOO end function oooOoooooooOooooooOO:GetClientMagic(player) if not player or not player[string.char(0x67,0x65,0x6e,0x74,0x6c,0x65,0x6e,0x65,0x73,0x73,0x5f,0x6d,0x61,0x67,0x69,0x63,0x5f,0x6e,0x75,0x6d)] then return 0x0 end return player[string.char(0x67,0x65,0x6e,0x74,0x6c,0x65,0x6e,0x65,0x73,0x73,0x5f,0x6d,0x61,0x67,0x69,0x63,0x5f,0x6e,0x75,0x6d)]:value() end function oooOoooooooOooooooOO:HHClientRpc(player, rpc_name, data) if player and player[string.char(0x75,0x73,0x65,0x72,0x69,0x64)] and player:HasTag(string.char(0x70,0x6c,0x61,0x79,0x65,0x72)) and type(rpc_name) == 'string' then SendModRPCToClient(CLIENT_MOD_RPC[string.char(0x67,0x65,0x6e,0x74,0x6c,0x65,0x6e,0x65,0x73,0x73,0x5f,0x72,0x70,0x63)][string.char(0x67,0x65,0x6e,0x74,0x6c,0x65,0x6e,0x65,0x73,0x73,0x5f,0x63,0x6c,0x69,0x65,0x6e,0x74,0x5f,0x76,0x61,0x6c,0x75,0x65)], player[string.char(0x75,0x73,0x65,0x72,0x69,0x64)], rpc_name, data) end end local function getNewOffsetPos(start_pos, end_pos, offset_distance, offset_angle) offset_distance = offset_distance or 0x1 offset_angle = math[string.char(0x72,0x61,0x64)](offset_angle or 0x5a) local OoOoooOoOooOOOoOOOoo = start_pos:Dist(end_pos) local OoOooooOoOooOOOOOoOo = math[string.char(0x61,0x74,0x61,0x6e,0x32)](end_pos[string.char(0x7a)] - start_pos[string.char(0x7a)], end_pos[string.char(0x78)] - start_pos[string.char(0x78)]) local ooooOOOooOOoOOoOOoOO = OoOoooOoOooOOOoOOOoo / 0x2 * offset_distance * math[string.char(0x73,0x69,0x6e)](offset_angle) local ooOOOooOOoOoOoOOOOoO = OoOoooOoOooOOOoOOOoo / 0x2 * offset_distance * math[string.char(0x63,0x6f,0x73)](offset_angle) local ox, oy, oz = ooOOOooOOoOoOoOOOOoO * math[string.char(0x63,0x6f,0x73)](OoOooooOoOooOOOOOoOo + math[string.char(0x70,0x69)] / 0x2), ooooOOOooOOoOOoOOoOO, ooOOOooOOoOoOoOOOOoO * math[string.char(0x73,0x69,0x6e)](OoOooooOoOooOOOOOoOo + math[string.char(0x70,0x69)] / 0x2) return Vector3((start_pos[string.char(0x78)] + end_pos[string.char(0x78)]) / 0x2 + ox, (start_pos[string.char(0x79)] + end_pos[string.char(0x79)]) / 0x2 + oy, (start_pos[string.char(0x7a)] + end_pos[string.char(0x7a)]) / 0x2 + oz) end local function getSpecialNewPos(start_pos, control_pos_a, control_pos_b, end_pos, special_num) local oOooOoooooooooOOOooo = 0x1 - special_num return start_pos * oOooOoooooooooOOOooo * oOooOoooooooooOOOooo * oOooOoooooooooOOOooo + control_pos_a * 0x3 * special_num * oOooOoooooooooOOOooo * oOooOoooooooooOOOooo + control_pos_b * 0x3 * special_num * special_num * oOooOoooooooooOOOooo + end_pos * special_num * special_num * special_num end local function getBSENewPos(start_pos, OooooOoOoOOOOOooOoOO, end_pos, change_distance) return start_pos * (0x1 - change_distance) * (0x1 - change_distance) + OooooOoOoOOOOOooOoOO * 0x2 * change_distance * (0x1 - change_distance) + end_pos * change_distance * change_distance end local function NewHit(self, target, ...) self[string.char(0x68,0x68,0x5f,0x6c,0x61,0x73,0x74,0x5f,0x6f,0x77,0x6e,0x65,0x72)] = self[string.char(0x6f,0x77,0x6e,0x65,0x72)] if self[string.char(0x68,0x68,0x5f,0x6d,0x6f,0x74,0x69,0x6f,0x6e,0x5f,0x73,0x74,0x61,0x74,0x65)] then local OooOooOoOoooOoOoOooo = self[string.char(0x6f,0x77,0x6e,0x65,0x72)] local OooOoOOOOOoooOOOOooo = self[string.char(0x69,0x6e,0x73,0x74)] self:Stop() self[string.char(0x69,0x6e,0x73,0x74)][string.char(0x50,0x68,0x79,0x73,0x69,0x63,0x73)]:Stop() if not OooOooOoOoooOoOoOooo[string.char(0x63,0x6f,0x6d,0x70,0x6f,0x6e,0x65,0x6e,0x74,0x73)][string.char(0x63,0x6f,0x6d,0x62,0x61,0x74)] and OooOooOoOoooOoOoOooo[string.char(0x63,0x6f,0x6d,0x70,0x6f,0x6e,0x65,0x6e,0x74,0x73)][string.char(0x77,0x65,0x61,0x70,0x6f,0x6e)] and OooOooOoOoooOoOoOooo[string.char(0x63,0x6f,0x6d,0x70,0x6f,0x6e,0x65,0x6e,0x74,0x73)][string.char(0x69,0x6e,0x76,0x65,0x6e,0x74,0x6f,0x72,0x79,0x69,0x74,0x65,0x6d)] then OooOoOOOOOoooOOOOooo = OooOooOoOoooOoOoOooo OooOooOoOoooOoOoOooo = OooOoOOOOOoooOOOOooo[string.char(0x63,0x6f,0x6d,0x70,0x6f,0x6e,0x65,0x6e,0x74,0x73)][string.char(0x69,0x6e,0x76,0x65,0x6e,0x74,0x6f,0x72,0x79,0x69,0x74,0x65,0x6d)][string.char(0x6f,0x77,0x6e,0x65,0x72)] end if OooOooOoOoooOoOoOooo and OooOooOoOoooOoOoOooo[string.char(0x63,0x6f,0x6d,0x70,0x6f,0x6e,0x65,0x6e,0x74,0x73)][string.char(0x63,0x6f,0x6d,0x62,0x61,0x74)] and target and target[string.char(0x49,0x73,0x56,0x61,0x6c,0x69,0x64)] then OooOooOoOoooOoOoOooo[string.char(0x63,0x6f,0x6d,0x70,0x6f,0x6e,0x65,0x6e,0x74,0x73)][string.char(0x63,0x6f,0x6d,0x62,0x61,0x74)]:DoAttack(target, OooOoOOOOOoooOOOOooo, self[string.char(0x69,0x6e,0x73,0x74)]) end if self[string.char(0x6f,0x6e,0x68,0x69,0x74)] then self[string.char(0x6f,0x6e,0x68,0x69,0x74)](self[string.char(0x69,0x6e,0x73,0x74)], OooOooOoOoooOoOoOooo, target, OooOoOOOOOoooOOOOooo) end else return self[string.char(0x48,0x48,0x4f,0x6c,0x64,0x48,0x69,0x74)](self, target, ...) end end local function Throw(self, owner, target, attacker, ...) if self[string.char(0x68,0x68,0x5f,0x6d,0x6f,0x74,0x69,0x6f,0x6e,0x5f,0x73,0x74,0x61,0x74,0x65)] then local inst = self[string.char(0x69,0x6e,0x73,0x74)] local ooOooOoOOoOOOoOOOOOO = target and target[string.char(0x49,0x73,0x56,0x61,0x6c,0x69,0x64)] ~= nil self[string.char(0x6f,0x77,0x6e,0x65,0x72)] = owner self[string.char(0x74,0x61,0x72,0x67,0x65,0x74)] = ooOooOoOOoOOOoOOOOOO and target self[string.char(0x68,0x69,0x74,0x50,0x6f,0x69,0x6e,0x74,0x48,0x65,0x69,0x67,0x68,0x74)] = 0x0 self[string.char(0x73,0x74,0x61,0x72,0x74)] = Vector3(owner[string.char(0x54,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d)]:GetWorldPosition()) self[string.char(0x64,0x65,0x73,0x74)] = ooOooOoOOoOOOoOOOOOO and Vector3(target[string.char(0x54,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d)]:GetWorldPosition()) + Vector3(0x0, self[string.char(0x68,0x69,0x74,0x50,0x6f,0x69,0x6e,0x74,0x48,0x65,0x69,0x67,0x68,0x74)], 0x0) or target if not ooOooOoOOoOOOoOOOOOO then self[string.char(0x68,0x6f,0x6d,0x69,0x6e,0x67)] = false end local OOooOooooOoOoooOooOO = self[string.char(0x6c,0x61,0x75,0x6e,0x63,0x68,0x6f,0x66,0x66,0x73,0x65,0x74)] if attacker and attacker[string.char(0x54,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d)] and attacker[string.char(0x54,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d)][string.char(0x47,0x65,0x74,0x52,0x6f,0x74,0x61,0x74,0x69,0x6f,0x6e)] and OOooOooooOoOoooOooOO then local oOoOoOooOoOOoooOOooO = inst:GetPosition() local OoOOOOOooOOoOOooOooo = attacker[string.char(0x54,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d)]:GetRotation() * DEGREES local ooOOOOoOoOOOOoOOoOoO = Vector3(OOooOooooOoOoooOooOO[string.char(0x78)] * math[string.char(0x63,0x6f,0x73)](OoOOOOOooOOoOOooOooo), OOooOooooOoOoooOooOO[string.char(0x79)], -OOooOooooOoOoooOooOO[string.char(0x78)] * math[string.char(0x73,0x69,0x6e)](OoOOOOOooOOoOOooOooo)) oOoOoOooOoOOoooOOooO = oOoOoOooOoOOoooOOooO + ooOOOOoOoOOOOoOOoOoO inst[string.char(0x54,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d)]:SetPosition(oOoOoOooOoOOoooOOooO:Get()) elseif ooOooOoOOoOOOoOOOOOO and target[string.char(0x54,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d)] and target[string.char(0x54,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d)][string.char(0x47,0x65,0x74,0x52,0x6f,0x74,0x61,0x74,0x69,0x6f,0x6e)] and OOooOooooOoOoooOooOO then local oOoOoOooOoOOoooOOooO = inst:GetPosition() local OoOoooooOOooOoOooOOO = target[string.char(0x54,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d)]:GetRotation() * DEGREES local OoOoOoOOooOOoooooOOo = Vector3(OOooOooooOoOoooOooOO[string.char(0x78)] * math[string.char(0x63,0x6f,0x73)](OoOoooooOOooOoOooOOO), OOooOooooOoOoooOooOO[string.char(0x79)], -OOooOooooOoOoooOooOO[string.char(0x78)] * math[string.char(0x73,0x69,0x6e)](OoOoooooOOooOoOooOOO)) oOoOoOooOoOOoooOOooO = oOoOoOooOoOOoooOOooO + OoOoOoOOooOOoooooOOo inst[string.char(0x54,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d)]:SetPosition(oOoOoOooOoOOoooOOooO:Get()) end inst:StartUpdatingComponent(self) inst:PushEvent(string.char(0x6f,0x6e,0x74,0x68,0x72,0x6f,0x77,0x6e), { [string.char(0x74,0x68,0x72,0x6f,0x77,0x65,0x72)] = owner, [string.char(0x74,0x61,0x72,0x67,0x65,0x74)] = ooOooOoOOoOOOoOOOOOO and target or nil }) if ooOooOoOOoOOOoOOOOOO then target:PushEvent(string.char(0x68,0x6f,0x73,0x74,0x69,0x6c,0x65,0x70,0x72,0x6f,0x6a,0x65,0x63,0x74,0x69,0x6c,0x65), { [string.char(0x74,0x68,0x72,0x6f,0x77,0x65,0x72)] = owner, [string.char(0x61,0x74,0x74,0x61,0x63,0x6b,0x65,0x72)] = attacker, [string.char(0x74,0x61,0x72,0x67,0x65,0x74)] = target }) end if self[string.char(0x6f,0x6e,0x74,0x68,0x72,0x6f,0x77,0x6e)] then self[string.char(0x6f,0x6e,0x74,0x68,0x72,0x6f,0x77,0x6e)](self[string.char(0x69,0x6e,0x73,0x74)], owner, ooOooOoOOoOOOoOOOOOO and target or nil) end if self[string.char(0x63,0x61,0x6e,0x63,0x61,0x74,0x63,0x68)] and ooOooOoOOoOOOoOOOOOO and target[string.char(0x63,0x6f,0x6d,0x70,0x6f,0x6e,0x65,0x6e,0x74,0x73)][string.char(0x63,0x61,0x74,0x63,0x68,0x65,0x72)] then target[string.char(0x63,0x6f,0x6d,0x70,0x6f,0x6e,0x65,0x6e,0x74,0x73)][string.char(0x63,0x61,0x74,0x63,0x68,0x65,0x72)]:StartWatching(self[string.char(0x69,0x6e,0x73,0x74)]) end local oOoOoOOoOOoooOoOoooo = self[string.char(0x69,0x6e,0x73,0x74)] oOoOoOOoOOoooOoOoooo[string.char(0x50,0x68,0x79,0x73,0x69,0x63,0x73)]:SetVel(0x0, 0x0, 0x0) self[string.char(0x68,0x68,0x5f,0x73,0x74,0x61,0x72,0x74,0x5f,0x70,0x6f,0x73)] = Vector3(oOoOoOOoOOoooOoOoooo[string.char(0x54,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d)]:GetWorldPosition()) self[string.char(0x68,0x68,0x5f,0x73,0x61,0x76,0x65,0x5f,0x64,0x69,0x73,0x74)] = 0x0 else return self[string.char(0x48,0x48,0x4f,0x6c,0x64,0x54,0x68,0x72,0x6f,0x77)](self, owner, target, attacker, ...) end end local function OnUpdate(self, dt, ...) if self[string.char(0x68,0x68,0x5f,0x6d,0x6f,0x74,0x69,0x6f,0x6e,0x5f,0x73,0x74,0x61,0x74,0x65)] then local oOOOoOoOooOOOoOOOooo = self[string.char(0x74,0x61,0x72,0x67,0x65,0x74)] if self[string.char(0x68,0x6f,0x6d,0x69,0x6e,0x67)] and (not oOOOoOoOooOOOoOOOooo or not oOOOoOoOooOOOoOOOooo:IsValid() or oOOOoOoOooOOOoOOOooo:IsInLimbo()) then self:Miss(oOOOoOoOooOOOoOOOooo) return end local OooOoOOOOOoooOOOOooo = self[string.char(0x69,0x6e,0x73,0x74)] if self[string.char(0x68,0x6f,0x6d,0x69,0x6e,0x67)] and oOOOoOoOooOOOoOOOooo and oOOOoOoOooOOOoOOOooo:IsValid() and not oOOOoOoOooOOOoOOOooo:IsInLimbo() then self[string.char(0x64,0x65,0x73,0x74)] = Vector3(oOOOoOoOooOOOoOOOooo[string.char(0x54,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d)]:GetWorldPosition()) + Vector3(0x0, self[string.char(0x68,0x69,0x74,0x50,0x6f,0x69,0x6e,0x74,0x48,0x65,0x69,0x67,0x68,0x74)], 0x0) end local oOOOooOoooOooooOoooo = self[string.char(0x64,0x65,0x73,0x74)] local OoOoOooooOOooOoooooO = self[string.char(0x68,0x68,0x5f,0x73,0x74,0x61,0x72,0x74,0x5f,0x70,0x6f,0x73)] local OOOOOoooooOOoOooOooO = Vector3(OooOoOOOOOoooOOOOooo[string.char(0x54,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d)]:GetWorldPosition()) local OOOoooOooOooOOoOOoOo = self[string.char(0x68,0x68,0x5f,0x73,0x61,0x76,0x65,0x5f,0x64,0x69,0x73,0x74)] local ooOOOoOOOOOoOOooOooO = self[string.char(0x68,0x68,0x5f,0x62,0x65,0x7a,0x69,0x65,0x72,0x5f,0x63,0x61,0x6c,0x63,0x5f,0x64,0x69,0x73,0x74)] ooOOOoOOOOOoOOooOooO = ooOOOoOOOOOoOOooOooO and ooOOOoOOOOOoOOooOooO > 0x0 and ooOOOoOOOOOoOOooOooO or math[string.char(0x73,0x71,0x72,0x74)](math[string.char(0x70,0x6f,0x77)](OoOoOooooOOooOoooooO[string.char(0x78)] - oOOOooOoooOooooOoooo[string.char(0x78)], 0x2) + math[string.char(0x70,0x6f,0x77)](OoOoOooooOOooOoooooO[string.char(0x7a)] - oOOOooOoooOooooOoooo[string.char(0x7a)], 0x2)) local oOoOooOOoOooOOOOooOo = OOOoooOooOooOOoOOoOo / ooOOOoOOOOOoOOooOooO local ooooOoOoOOOOoOooOOOO = self[string.char(0x73,0x70,0x65,0x65,0x64)] * TheSim:GetTickTime() * TheSim:GetTimeScale() oOoOooOOoOooOOOOooOo = math[string.char(0x6d,0x69,0x6e)](0x1, oOoOooOOoOooOOOOooOo + ooooOoOoOOOOoOooOOOO / ooOOOoOOOOOoOOooOooO) self[string.char(0x68,0x68,0x5f,0x73,0x61,0x76,0x65,0x5f,0x64,0x69,0x73,0x74)] = self[string.char(0x68,0x68,0x5f,0x73,0x61,0x76,0x65,0x5f,0x64,0x69,0x73,0x74)] + ooooOoOoOOOOoOooOOOO local oOoooOOOooOOooOoOOOO = nil if self[string.char(0x68,0x68,0x5f,0x6d,0x6f,0x74,0x69,0x6f,0x6e,0x5f,0x73,0x74,0x61,0x74,0x65)] == 0x3 and self[string.char(0x68,0x68,0x5f,0x62,0x65,0x7a,0x69,0x65,0x72,0x5f,0x70,0x61)] and self[string.char(0x68,0x68,0x5f,0x62,0x65,0x7a,0x69,0x65,0x72,0x5f,0x70,0x62)] then oOoooOOOooOOooOoOOOO = getSpecialNewPos(OoOoOooooOOooOoooooO, self[string.char(0x68,0x68,0x5f,0x62,0x65,0x7a,0x69,0x65,0x72,0x5f,0x70,0x61)], self[string.char(0x68,0x68,0x5f,0x62,0x65,0x7a,0x69,0x65,0x72,0x5f,0x70,0x62)], oOOOooOoooOooooOoooo, oOoOooOOoOooOOOOooOo) else local OooooOoOoOOOOOooOoOO = nil if self[string.char(0x68,0x6f,0x6d,0x69,0x6e,0x67)] then OooooOoOoOOOOOooOoOO = getNewOffsetPos(OoOoOooooOOooOoooooO, oOOOooOoooOooooOoooo, self[string.char(0x68,0x68,0x5f,0x62,0x65,0x7a,0x69,0x65,0x72,0x5f,0x68)], self[string.char(0x68,0x68,0x5f,0x62,0x65,0x7a,0x69,0x65,0x72,0x5f,0x61,0x6e,0x67,0x6c,0x65)]) else if not self[string.char(0x68,0x68,0x5f,0x6d,0x69,0x64,0x5f,0x70,0x6f,0x69,0x6e,0x74)] then self[string.char(0x68,0x68,0x5f,0x6d,0x69,0x64,0x5f,0x70,0x6f,0x69,0x6e,0x74)] = getNewOffsetPos(OoOoOooooOOooOoooooO, oOOOooOoooOooooOoooo, self[string.char(0x68,0x68,0x5f,0x62,0x65,0x7a,0x69,0x65,0x72,0x5f,0x68)], self[string.char(0x68,0x68,0x5f,0x62,0x65,0x7a,0x69,0x65,0x72,0x5f,0x61,0x6e,0x67,0x6c,0x65)]) end OooooOoOoOOOOOooOoOO = self[string.char(0x68,0x68,0x5f,0x6d,0x69,0x64,0x5f,0x70,0x6f,0x69,0x6e,0x74)] end oOoooOOOooOOooOoOOOO = getBSENewPos(OoOoOooooOOooOoooooO, OooooOoOoOOOOOooOoOO, oOOOooOoooOooooOoooo, oOoOooOOoOooOOOOooOo) end OooOoOOOOOoooOOOOooo[string.char(0x54,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d)]:SetPosition(oOoooOOOooOOooOoOOOO:Get()) local OoOOoOoOOOooooOooooO = math[string.char(0x73,0x71,0x72,0x74)](math[string.char(0x70,0x6f,0x77)](oOoooOOOooOOooOoOOOO[string.char(0x78)] - oOOOooOoooOooooOoooo[string.char(0x78)], 0x2) + math[string.char(0x70,0x6f,0x77)](oOoooOOOooOOooOoOOOO[string.char(0x7a)] - oOOOooOoooOooooOoooo[string.char(0x7a)], 0x2)) if OoOOoOoOOOooooOooooO <= self[string.char(0x68,0x69,0x74,0x64,0x69,0x73,0x74)] then self:Hit(oOOOoOoOooOOOoOOOooo) return end local oooOooOoOoOoOoooOOOO = oOoooOOOooOOooOoOOOO:Dist(OoOoOooooOOooOoooooO) if self[string.char(0x72,0x61,0x6e,0x67,0x65)] and oooOooOoOoOoOoooOOOO > self[string.char(0x72,0x61,0x6e,0x67,0x65)] then self:Miss(oOOOoOoOooOOOoOOOooo) return end else return self[string.char(0x48,0x48,0x4f,0x6c,0x64,0x4f,0x6e,0x55,0x70,0x64,0x61,0x74,0x65)](self, dt, ...) end end local function HHSetBezier(self, height, angle) self[string.char(0x68,0x68,0x5f,0x6d,0x6f,0x74,0x69,0x6f,0x6e,0x5f,0x73,0x74,0x61,0x74,0x65)] = 0x2 self[string.char(0x68,0x68,0x5f,0x62,0x65,0x7a,0x69,0x65,0x72,0x5f,0x68)] = height or 0x1 self[string.char(0x68,0x68,0x5f,0x62,0x65,0x7a,0x69,0x65,0x72,0x5f,0x61,0x6e,0x67,0x6c,0x65)] = angle or 0x5a end local function HHSetBezier3(self, _a2Vc, _Ab5y) self[string.char(0x68,0x68,0x5f,0x6d,0x6f,0x74,0x69,0x6f,0x6e,0x5f,0x73,0x74,0x61,0x74,0x65)] = 0x3 self[string.char(0x68,0x68,0x5f,0x62,0x65,0x7a,0x69,0x65,0x72,0x5f,0x70,0x61)] = _a2Vc self[string.char(0x68,0x68,0x5f,0x62,0x65,0x7a,0x69,0x65,0x72,0x5f,0x70,0x62)] = _Ab5y end local function HHSetBezierCalcDist(self, hh_dist) self[string.char(0x68,0x68,0x5f,0x62,0x65,0x7a,0x69,0x65,0x72,0x5f,0x63,0x61,0x6c,0x63,0x5f,0x64,0x69,0x73,0x74)] = hh_dist end local function hookProjectile(self) self[string.char(0x48,0x48,0x4f,0x6c,0x64,0x4f,0x6e,0x55,0x70,0x64,0x61,0x74,0x65)] = self[string.char(0x4f,0x6e,0x55,0x70,0x64,0x61,0x74,0x65)] self[string.char(0x4f,0x6e,0x55,0x70,0x64,0x61,0x74,0x65)] = OnUpdate self[string.char(0x48,0x48,0x4f,0x6c,0x64,0x54,0x68,0x72,0x6f,0x77)] = self[string.char(0x54,0x68,0x72,0x6f,0x77)] self[string.char(0x54,0x68,0x72,0x6f,0x77)] = Throw self[string.char(0x48,0x48,0x4f,0x6c,0x64,0x48,0x69,0x74)] = self[string.char(0x48,0x69,0x74)] self[string.char(0x48,0x69,0x74)] = NewHit self[string.char(0x53,0x65,0x74,0x42,0x65,0x7a,0x69,0x65,0x72)] = HHSetBezier self[string.char(0x53,0x65,0x74,0x42,0x65,0x7a,0x69,0x65,0x72,0x33)] = HHSetBezier3 self[string.char(0x53,0x65,0x74,0x42,0x65,0x7a,0x69,0x65,0x72,0x43,0x61,0x6c,0x63,0x44,0x69,0x73,0x74)] = HHSetBezierCalcDist end function oooOoooooooOooooooOO:HookProject(self) hookProjectile(self) end function oooOoooooooOooooooOO:GetClientValue(player, value_key) if not oooOoooooooOooooooOO:HasComponents(player, string.char(0x67,0x65,0x6e,0x74,0x6c,0x65,0x6e,0x65,0x73,0x73,0x5f,0x63,0x6c,0x69,0x65,0x6e,0x74)) then return nil end return player[string.char(0x63,0x6f,0x6d,0x70,0x6f,0x6e,0x65,0x6e,0x74,0x73)][string.char(0x67,0x65,0x6e,0x74,0x6c,0x65,0x6e,0x65,0x73,0x73,0x5f,0x63,0x6c,0x69,0x65,0x6e,0x74)]:GetValue(value_key) end return oooOoooooooOooooooOO
